version: '3.9'

services:
    dev:
        container_name: nestjs_api_dev
        image: nestjs-api-dev:1.0.0
        build:
            context: .
            target: development
            dockerfile: ./Dockerfile
        command: npm run start:debug
        ports:
            - 3000:3000
            - 9229:9229
        networks:
            - nesjs-network
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
    prod:
        container_name: nestjs_api_prod
        image: nestjs-api-prod:1.0.0
        build:
            context: .
            target: production
            dockerfile: ./Dockerfile
        command: npm run start:prod
        ports:
            - 3000:3000
            - 9229:9229
        networks:
            - nesjs-network
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped

networks:
    nesjs-network:





















# version: '3.9'

# services:

#   db:
#     image: postgres:alpine3.15
#     container_name: database
#     restart: always
#     environment:
#       - POSTGRES_USER=root
#       - POSTGRES_PASSWORD=root
#       - POSTGRES_DB=postgres
#     volumes:
#       - /var/lib/postgresql/data
#     ports:
#       - "5432:5432"

#   nestjs-app:
#     container_name: nestjs-app
#     build:
#       context: .
#       dockerfile: Dockerfile
#     volumes:
#       - .:/usr/src/app
#       - /usr/src/app/node_modules
#     restart: unless-stopped
#     ports:
#       - 4000:4000

#   pgadmin:
#     image: dpage/pgadmin4:6.8
#     environment:
#       PGADMIN_DEFAULT_EMAIL: "jos.munozl@gmail.com"
#       PGADMIN_DEFAULT_PASSWORD: "root"
#     ports:
#       - "80:80"
#     volumes:
#       - /var/lib/pgadmin
#     depends_on:
#       - db
